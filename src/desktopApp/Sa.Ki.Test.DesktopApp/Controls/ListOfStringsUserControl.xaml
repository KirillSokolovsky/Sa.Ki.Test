<UserControl x:Class="Sa.Ki.Test.DesktopApp.Controls.ListOfStringsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sa.Ki.Test.DesktopApp.Controls"
             xmlns:dacnv="clr-namespace:Sa.Ki.Test.DesktopApp.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <dacnv:InvertNullConverter x:Key="InvertNullCnv"></dacnv:InvertNullConverter>
        <dacnv:InvertBoolConverter x:Key="NotCnv"></dacnv:InvertBoolConverter>

        <ContextMenu x:Key="StringItemMenu">
            <MenuItem Header="Delete" Click="DeleteStringItemMenuItem_Click"/>
            <MenuItem Header="Edit" Click="EditStringItemMenuItem_Click"/>
        </ContextMenu>

    </UserControl.Resources>
    
    <Grid Name="LayoutGrid">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly}" Value="False">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Button Padding="3" Margin="1 1 0 1" Click="AddNewStringItem_Click">Add New:</Button>

            <TextBox Grid.Column="1" Margin="1"
                     Text="{Binding NewStringItem}">
                <TextBox.Style>
                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AvailableStringItems}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <ComboBox Grid.Column="1" Margin="1"
                      ItemsSource="{Binding AvailableStringItems}"
                      IsEditable="{Binding IsCustomAvailableStringItemsAllowed}"
                      Text="{Binding NewStringItem}">
                <ComboBox.Style>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding AvailableStringItems, Converter={StaticResource InvertNullCnv}}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>                
            </ComboBox>

        </Grid>

        <ListBox Name="StringItemsListBox" Grid.Row="1" ItemsSource="{Binding StringItems}" Margin="1"
                 SelectedItem="{Binding SelectedStringItem}"
                 IsSynchronizedWithCurrentItem="True">
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Name="StringItemTextBlock" Text="{Binding Path=.}"
                             Margin="5 1 0 1"
                             Padding="1">
                    </TextBlock>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.Style>
                <Style TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
                    <Style.Triggers>
                        
                        <DataTrigger Binding="{Binding IsReadOnly}" Value="False">
                            <Setter Property="ContextMenu" Value="{StaticResource StringItemMenu}"></Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                            <Setter Property="ContextMenu" Value="{x:Null}"></Setter>
                        </DataTrigger>
                        
                    </Style.Triggers>
                </Style>
            </ListBox.Style>
        </ListBox>

    </Grid>

</UserControl>
