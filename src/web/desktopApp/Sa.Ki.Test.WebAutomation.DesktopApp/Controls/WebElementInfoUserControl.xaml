<UserControl x:Class="Sa.Ki.Test.WebAutomation.DesktopApp.Controls.WebElementInfoUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sa.Ki.Test.WebAutomation.DesktopApp.Controls"
             xmlns:dacn="clr-namespace:Sa.Ki.Test.DesktopApp.Controls;assembly=Sa.Ki.Test.DesktopApp"
             xmlns:dacnv="clr-namespace:Sa.Ki.Test.DesktopApp.Converters;assembly=Sa.Ki.Test.DesktopApp"
             xmlns:cnv="clr-namespace:Sa.Ki.Test.WebAutomation.DesktopApp.Converters"
             xmlns:mdls="clr-namespace:Sa.Ki.Test.WebAutomation.DesktopApp.Models;assembly=Sa.Ki.Test.WebAutomation.DesktopApp.Models"
             xmlns:wi="clr-namespace:Sa.Ki.Test.WebAutomation.DesktopApp.Controls.WebElementInfoUserControlCommon"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>

        <dacnv:DebugConverter x:Key="DbgCnv"></dacnv:DebugConverter>

        <dacnv:InvertBoolConverter x:Key="NotCnv"></dacnv:InvertBoolConverter>
        <dacnv:StringNullOrEmptyConverter x:Key="IsNullOrEmptyCnv"></dacnv:StringNullOrEmptyConverter>
        <dacnv:NullableCollectionLength x:Key="NullableCollectionLengthCnv"></dacnv:NullableCollectionLength>

        <cnv:WebElementToTreePathConverter x:Key="BreadCnv"></cnv:WebElementToTreePathConverter>

        <wi:WebElementInfoDetailsTemplateSelector x:Key="TmplSelector"></wi:WebElementInfoDetailsTemplateSelector>

        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Width" Value="90"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="Margin" Value="0 0 5 0"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Right"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="MinWidth" Value="150"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}"></Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}" Value="True">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="BorderThickness" Value="1 0 0 0"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="WrapPanel">
            <Setter Property="Margin" Value="5 5 0 0"></Setter>
        </Style>

        <DataTemplate x:Key="BaseInfo">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <GroupBox Grid.Row="0" Header="Tree path:" Margin="5" Background="Transparent">
                    <TextBlock Text="{Binding Converter={StaticResource BreadCnv}}"></TextBlock>
                </GroupBox>

                <WrapPanel Grid.Row="1" Style="{StaticResource {x:Type WrapPanel}}">
                    <Label>Element Type:</Label>
                    <TextBox Text="{Binding ElementType}" 
                         IsReadOnly="True" 
                         BorderThickness="1 0 0 0" 
                         Background="Transparent"></TextBox>
                </WrapPanel>

                <WrapPanel Grid.Row="2" Style="{StaticResource {x:Type WrapPanel}}">
                    <Label>Name:</Label>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                </WrapPanel>

                <WrapPanel Grid.Row="3" Style="{StaticResource {x:Type WrapPanel}}">
                    <Label>Description:</Label>
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                     AcceptsReturn="True" AcceptsTab="True">
                    </TextBox>
                </WrapPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="InnerKeyAndIsKey">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>


                <WrapPanel Grid.Row="0">
                    <Label>Inner Key:</Label>
                    <TextBox Text="{Binding InnerKey}">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">

                                <Setter Property="IsReadOnly" Value="True"></Setter>
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="1 0 0 0"></Setter>

                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <WrapPanel.Style>
                        <Style TargetType="WrapPanel" BasedOn="{StaticResource {x:Type WrapPanel}}">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding InnerKey}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Style>

                </WrapPanel>

                <WrapPanel Grid.Row="1" Style="{StaticResource {x:Type WrapPanel}}">
                    <Label>Is Key?</Label>
                    <CheckBox IsChecked="{Binding IsKey, UpdateSourceTrigger=PropertyChanged}"
                      Padding="5"
                      VerticalAlignment="Center"
                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}, Converter={StaticResource NotCnv}}">
                    </CheckBox>
                </WrapPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TagsAndLocator">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Expander Grid.Row="0" Margin="5" Background="Transparent"
                  MaxHeight="300"
                  ExpandDirection="Down">

                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Tags ("></TextBlock>
                            <TextBlock Text="{Binding Tags, Converter={StaticResource NullableCollectionLengthCnv}}"></TextBlock>
                            <TextBlock Text=")"></TextBlock>
                        </StackPanel>
                    </Expander.Header>

                    <dacn:ListOfStringsUserControl StringItems="{Binding Tags, Mode=TwoWay}"
                                           IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}"
                                           ItemName="Tag">

                    </dacn:ListOfStringsUserControl>

                    <Expander.Style>
                        <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">

                            <Setter Property="BorderThickness" Value="0"></Setter>

                            <Style.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="BorderThickness" Value="0 0 1 1"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>

                </Expander>

                <GroupBox Grid.Row="1" Header="Locator:" Margin="5" Background="Transparent">
                    <local:WebLocatorInfoUserControl WebLocator="{Binding Locator}"
                                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}">
                    </local:WebLocatorInfoUserControl>
                </GroupBox>

                <GroupBox Grid.Row="2" Header="Locators path:" Margin="5" Background="Transparent">
                    <local:WebElementLocatorsPathUserControl WebElement="{Binding}">

                    </local:WebElementLocatorsPathUserControl>
                </GroupBox>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ElementInfo">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <ContentPresenter Grid.Row="0" 
                                  Content="{Binding}" 
                                  ContentTemplate="{StaticResource BaseInfo}">
                </ContentPresenter>

                <ContentPresenter Grid.Row="1" 
                                  Content="{Binding}" 
                                  ContentTemplate="{StaticResource InnerKeyAndIsKey}">
                </ContentPresenter>

                <ContentPresenter Grid.Row="2" 
                                  Content="{Binding}" 
                                  ContentTemplate="{StaticResource TagsAndLocator}">
                </ContentPresenter>

            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="ElementWithReferenceInfo" DataType="{x:Type mdls:WebElementWithReferenceViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <ContentPresenter Grid.Row="0" 
                                  Content="{Binding}" 
                                  ContentTemplate="{StaticResource BaseInfo}">
                </ContentPresenter>

                <ContentPresenter Grid.Row="1" 
                                  Content="{Binding}" 
                                  ContentTemplate="{StaticResource InnerKeyAndIsKey}">
                </ContentPresenter>

                <WrapPanel Grid.Row="2" Style="{StaticResource {x:Type WrapPanel}}">
                    <Label>Referenced to:</Label>
                    <TextBox Text="{Binding ReferenceBreadString}" 
                         IsReadOnly="True" 
                         BorderThickness="1 0 0 0" 
                         Background="Transparent"></TextBox>
                    <Button Content="Edit" Click="EditReferencedElementButton_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}" 
                                                 Value="False">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </WrapPanel>

                <Expander Grid.Row="3" Margin="5" Background="Transparent"
                  MaxHeight="300"
                  ExpandDirection="Down">

                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Tags ("></TextBlock>
                            <TextBlock Text="{Binding Tags, Converter={StaticResource NullableCollectionLengthCnv}}"></TextBlock>
                            <TextBlock Text=")"></TextBlock>
                        </StackPanel>
                    </Expander.Header>

                    <dacn:ListOfStringsUserControl StringItems="{Binding Tags, Mode=TwoWay}"
                                           IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}"
                                           ItemName="Tag">

                    </dacn:ListOfStringsUserControl>

                    <Expander.Style>
                        <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">

                            <Setter Property="BorderThickness" Value="0"></Setter>

                            <Style.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter Property="BorderThickness" Value="0 0 1 1"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Expander.Style>

                </Expander>

                <GroupBox Grid.Row="4" Header="Locator:" Margin="5" Background="Transparent">
                    <StackPanel>

                        <WrapPanel>
                            <Label>Override?</Label>
                            <CheckBox IsChecked="{Binding HasLocator, UpdateSourceTrigger=PropertyChanged}"
                                      Padding="5"
                                      VerticalAlignment="Center"
                                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}, Converter={StaticResource NotCnv}}">
                            </CheckBox>
                            <WrapPanel.Style>
                                <Style TargetType="WrapPanel" BasedOn="{StaticResource {x:Type WrapPanel}}">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementType}" Value="Reference">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </WrapPanel.Style>
                        </WrapPanel>

                        <local:WebLocatorInfoUserControl>
                            <local:WebLocatorInfoUserControl.Style>
                                <Style TargetType="local:WebLocatorInfoUserControl">
                                    <Setter Property="WebLocator" Value="{Binding Locator}"></Setter>
                                    <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type local:WebElementInfoUserControl}}}"></Setter>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding ElementType}" Value="Reference"></Condition>
                                                <Condition Binding="{Binding HasLocator}" Value="False"></Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="WebLocator" Value="{Binding ReferencedWebElement.Locator, UpdateSourceTrigger=PropertyChanged}"></Setter>
                                            <Setter Property="IsReadOnly" Value="True"></Setter>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </local:WebLocatorInfoUserControl.Style>
                        </local:WebLocatorInfoUserControl>
                    </StackPanel>
                </GroupBox>

                <GroupBox Grid.Row="5" Header="Locators path:" Margin="5" Background="Transparent">
                    <local:WebElementLocatorsPathUserControl WebElement="{Binding}">

                    </local:WebElementLocatorsPathUserControl>
                </GroupBox>

            </Grid>
        </DataTemplate>

    </UserControl.Resources>

    <Grid Name="LayoutGrid">
        <ContentPresenter Content="{Binding WebElement}" ContentTemplateSelector="{StaticResource TmplSelector}"></ContentPresenter>
    </Grid>
</UserControl>
